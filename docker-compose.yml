# ==============================================================================
# SERVICES
# ==============================================================================
services:
  # ----------------------------------------------------------------------------
  # PostgreSQL Database
  # ----------------------------------------------------------------------------
  postgres:
    image: postgres:15-alpine
    container_name: artestofados_postgres
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: ${DB_NAME:-artestofados}
      POSTGRES_USER: ${DB_USER:-artestofados}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-artestofados123}
      PGDATA: /var/lib/postgresql/data/pgdata
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./servidor-central/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    
    ports:
      - "${DB_PORT:-5432}:5432"
    
    networks:
      - artestofados_network
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-artestofados} -d ${DB_NAME:-artestofados}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    
    # Limites de recursos
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # ----------------------------------------------------------------------------
  # Servidor Central (Backend)
  # ----------------------------------------------------------------------------
  servidor-central:
    build:
      context: ./servidor-central
      dockerfile: Dockerfile
      target: production
    
    container_name: artestofados_servidor
    restart: unless-stopped
    
    depends_on:
      postgres:
        condition: service_healthy
    
    environment:
      # Node
      NODE_ENV: production
      PORT: ${PORT:-4000}
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-artestofados}
      DB_USER: ${DB_USER:-artestofados}
      DB_PASSWORD: ${DB_PASSWORD:-artestofados123}
      
      # OpenAI
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-3.5-turbo}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS:-500}
      OPENAI_TEMPERATURE: ${OPENAI_TEMPERATURE:-0.7}
      
      # Empresa
      EMPRESA_NOME: ${EMPRESA_NOME:-Artestofados}
      EMPRESA_TELEFONE: ${EMPRESA_TELEFONE:-(83) 3241-1234}
      EMPRESA_EMAIL: ${EMPRESA_EMAIL:-contato@artestofados.com.br}
      EMPRESA_CIDADE: ${EMPRESA_CIDADE:-Jo√£o Pessoa/PB}
      
      # Server
      SERVER_URL: ${SERVER_URL:-http://localhost:4000}
    
    volumes:
      - os_data:/app/data/ordens_servico
      - whatsapp_session:/app/whatsapp_session
      - logs_volume:/app/logs
    
    ports:
      - "${PORT:-4000}:4000"
    
    networks:
      - artestofados_network
    
    # Limites de recursos
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '1'
          memory: 512M
    
    # Reiniciar em caso de falha
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ----------------------------------------------------------------------------
  # Cliente Desktop (Web UI)
  # ----------------------------------------------------------------------------
  cliente-desktop:
    build:
      context: ./cliente-desktop
      dockerfile: Dockerfile
    
    container_name: artestofados_cliente
    restart: unless-stopped
    
    depends_on:
      - servidor-central
    
    environment:
      SERVER_URL: http://servidor-central:4000
    
    ports:
      - "3000:3000"
    
    networks:
      - artestofados_network
    
    # Limites de recursos
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# ==============================================================================
# VOLUMES
# ==============================================================================
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/postgres
  
  os_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/ordens_servico
  
  whatsapp_session:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/whatsapp
  
  logs_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/logs

# ==============================================================================
# NETWORKS
# ==============================================================================
networks:
  artestofados_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16